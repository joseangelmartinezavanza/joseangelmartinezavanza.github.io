"use strict";(self.webpackChunkp_my_dm=self.webpackChunkp_my_dm||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"pythonSidebar":[{"type":"link","label":"\ud83d\udc0d M\xf3dulo Optaivo IES Albarregas","href":"/docs/python/Introducci\xf3n","docId":"python/Introducci\xf3n","unlisted":false},{"type":"category","label":"UT1 \u2013 \\"Introducci\xf3n al lenguaje Python\\"","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1.1 Entorno de Trabajo","href":"/docs/python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.1_entorno_de_trabajo","docId":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.1_entorno_de_trabajo","unlisted":false},{"type":"link","label":"1.2 Sintaxis B\xe1sica","href":"/docs/python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.2_sintaxis_basica","docId":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.2_sintaxis_basica","unlisted":false},{"type":"link","label":"1.3 Estructura de un Programa","href":"/docs/python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.3_estructura_programa","docId":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.3_estructura_programa","unlisted":false},{"type":"link","label":"1.4 Estilo y Convenciones PEP8","href":"/docs/python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.4_convenciones_PEP8","docId":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.4_convenciones_PEP8","unlisted":false}],"href":"/docs/python/UT1 \u2013 Introducci\xf3n al lenguaje Python/"},{"type":"category","label":"UT2 \u2013 Tipos de datos y estructuras b\xe1sicas","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"2.1 Variables en Python","href":"/docs/python/UT2 - estructuras basicas/2.1_variables_costantes","docId":"python/UT2 - estructuras basicas/2.1_variables_costantes","unlisted":false},{"type":"link","label":"2.2 Tipos b\xe1sicos y Conversi\xf3n","href":"/docs/python/UT2 - estructuras basicas/2.2_tipos_conversion","docId":"python/UT2 - estructuras basicas/2.2_tipos_conversion","unlisted":false},{"type":"link","label":"2.3 Operadores","href":"/docs/python/UT2 - estructuras basicas/2.3_operadores","docId":"python/UT2 - estructuras basicas/2.3_operadores","unlisted":false},{"type":"link","label":"2.4 Funciones integradas","href":"/docs/python/UT2 - estructuras basicas/2.4_funciones integradas","docId":"python/UT2 - estructuras basicas/2.4_funciones integradas","unlisted":false},{"type":"link","label":"2.5 Trabajo con Cadenas","href":"/docs/python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","docId":"python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","unlisted":false},{"type":"link","label":"2.6 Errores b\xe1sicos en python","href":"/docs/python/UT2 - estructuras basicas/2.6_errores b\xe1sicos","docId":"python/UT2 - estructuras basicas/2.6_errores b\xe1sicos","unlisted":false}],"href":"/docs/python/UT2 - estructuras basicas/"},{"type":"category","label":"UT3 \u2013 Control de Flujo","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"3.1 Estructuras Condicionales","href":"/docs/python/UT3 - control de flujo/3.1_estructuras_condicionales","docId":"python/UT3 - control de flujo/3.1_estructuras_condicionales","unlisted":false},{"type":"link","label":"3.2 Bucles","href":"/docs/python/UT3 - control de flujo/3.2_bucles","docId":"python/UT3 - control de flujo/3.2_bucles","unlisted":false}],"href":"/docs/python/UT3 - control de flujo/"}]},"docs":{"python/Introducci\xf3n":{"id":"python/Introducci\xf3n","title":"\ud83d\udc0d M\xf3dulo Optaivo IES Albarregas","description":"\xbfQu\xe9 Aprenderemos?","sidebar":"pythonSidebar"},"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.1_entorno_de_trabajo":{"id":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.1_entorno_de_trabajo","title":"1.1 Entorno de Trabajo","description":"La primera etapa para comenzar a trabajar con Python consiste en instalarlo correctamente en el ordenador y preparar el entorno donde vamos a escribir, ejecutar y probar nuestros programas. Esta fase es fundamental, ya que de ella depender\xe1 que todo funcione con fluidez y sin errores. A continuaci\xf3n, se detallan los pasos necesarios para realizar la instalaci\xf3n en los principales sistemas operativos y se explican las herramientas b\xe1sicas que acompa\xf1an a Python.","sidebar":"pythonSidebar"},"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.2_sintaxis_basica":{"id":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.2_sintaxis_basica","title":"1.2 Sintaxis B\xe1sica","description":"La sintaxis de un lenguaje de programaci\xf3n define las reglas que debemos seguir para escribir el c\xf3digo correctamente. Python es conocido por tener una sintaxis sencilla y clara, lo que facilita mucho su aprendizaje. Sin embargo, tambi\xe9n es muy estricto con ciertos aspectos, como la identaci\xf3n, que resultan fundamentales para que los programas funcionen.","sidebar":"pythonSidebar"},"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.3_estructura_programa":{"id":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.3_estructura_programa","title":"1.3 Estructura de un Programa","description":"A diferencia de otros lenguajes como Java o C, en Python no es obligatorio encerrar el c\xf3digo en clases o funciones. Un programa puede ser simplemente un archivo con instrucciones escritas una detr\xe1s de otra. Sin embargo, para que el c\xf3digo sea m\xe1s claro, legible y reutilizable, se recomienda seguir una estructura b\xe1sica que suele incluir los siguientes elementos:","sidebar":"pythonSidebar"},"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.4_convenciones_PEP8":{"id":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/1.4_convenciones_PEP8","title":"1.4 Estilo y Convenciones PEP8","description":"Cuando varias personas trabajan en un mismo proyecto, no basta con que el c\xf3digo funcione: tambi\xe9n debe ser claro, legible y coherente. Para ello, en Python existe un documento llamado PEP8 (Python Enhancement Proposal 8), que define las reglas de estilo recomendadas para escribir programas en este lenguaje.","sidebar":"pythonSidebar"},"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/index":{"id":"python/UT1 \u2013 Introducci\xf3n al lenguaje Python/index","title":"UT1 \u2013 \\"Introducci\xf3n al lenguaje Python\\"","description":"1\ufe0f\u20e3 \xbfQu\xe9 es Python?","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.1_variables_costantes":{"id":"python/UT2 - estructuras basicas/2.1_variables_costantes","title":"2.1 Variables en Python","description":"En Python, una variable es un espacio de memoria identificado con un nombre que almacena un valor. Dicho valor puede cambiar a lo largo de la ejecuci\xf3n del programa. La asignaci\xf3n se realiza mediante el operador =.","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.2_tipos_conversion":{"id":"python/UT2 - estructuras basicas/2.2_tipos_conversion","title":"2.2 Tipos b\xe1sicos y Conversi\xf3n","description":"Como vimos en la unidad anterior Python incluye varios tipos de datos primitivos. Los m\xe1s utilizados son los enteros, los reales (flotantes), los booleanos y las cadenas de texto.","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.3_operadores":{"id":"python/UT2 - estructuras basicas/2.3_operadores","title":"2.3 Operadores","description":"Los operadores permiten realizar c\xe1lculos y comparaciones entre variables o valores. En Python existen distintos tipos:","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.4_funciones integradas":{"id":"python/UT2 - estructuras basicas/2.4_funciones integradas","title":"2.4 Funciones integradas","description":"Python incorpora un amplio conjunto de funciones integradas (tambi\xe9n llamadas built-in functions). Estas funciones est\xe1n disponibles de forma inmediata al iniciar un programa, sin necesidad de importar m\xf3dulos externos. Constituyen una herramienta fundamental porque permiten realizar operaciones muy variadas de manera r\xe1pida y sencilla: desde conversiones de tipos, hasta c\xe1lculos matem\xe1ticos o manipulaci\xf3n de secuencias.","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas":{"id":"python/UT2 - estructuras basicas/2.5_trabajo_con_cadenas","title":"2.5 Trabajo con Cadenas","description":"1\ufe0f\u20e3 Cadenas (clase str)","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/2.6_errores b\xe1sicos":{"id":"python/UT2 - estructuras basicas/2.6_errores b\xe1sicos","title":"2.6 Errores b\xe1sicos en python","description":"Cuando se empieza a programar en Python es muy com\xfan encontrarse con ciertos errores b\xe1sicos. Estos mensajes de error son generados por el int\xe9rprete y ayudan a identificar qu\xe9 sali\xf3 mal. A continuaci\xf3n se describen los m\xe1s habituales:","sidebar":"pythonSidebar"},"python/UT2 - estructuras basicas/index":{"id":"python/UT2 - estructuras basicas/index","title":"UT2 \u2013 Tipos de datos y estructuras b\xe1sicas","description":"En esta unidad se presentan los elementos fundamentales que permiten trabajar con informaci\xf3n en Python. Comprender los tipos de datos b\xe1sicos, la forma de declarar variables y constantes, as\xed como los operadores que se pueden aplicar sobre ellos y el trabajo con cadenas de texto, resulta imprescindible para empezar a programar. Adem\xe1s, se revisan funciones integradas que facilitan el trabajo cotidiano con datos.","sidebar":"pythonSidebar"},"python/UT3 - control de flujo/3.1_estructuras_condicionales":{"id":"python/UT3 - control de flujo/3.1_estructuras_condicionales","title":"3.1 Estructuras Condicionales","description":"De no ser por las estructuras de control, un programa en Python se ejecutar\xeda de manera lineal, instrucci\xf3n tras instrucci\xf3n, hasta finalizar. Sin embargo, muchas veces queremos que el programa tome decisiones seg\xfan ciertas condiciones: que ejecute un bloque de c\xf3digo si ocurre algo, y otro bloque diferente si no ocurre.","sidebar":"pythonSidebar"},"python/UT3 - control de flujo/3.2_bucles":{"id":"python/UT3 - control de flujo/3.2_bucles","title":"3.2 Bucles","description":"Un bucle es una estructura de control que permite repetir un bloque de c\xf3digo mientras se cumpla una condici\xf3n o mientras se recorren los elementos de una secuencia.","sidebar":"pythonSidebar"},"python/UT3 - control de flujo/index":{"id":"python/UT3 - control de flujo/index","title":"UT3 \u2013 Control de Flujo","description":"Cuando se escribe un programa en Python (o en cualquier otro lenguaje de programaci\xf3n), las instrucciones se ejecutan de arriba hacia abajo, de manera secuencial. Sin embargo, la mayor\xeda de los problemas reales requieren que el programa tome decisiones (ejecutar un bloque de c\xf3digo u otro seg\xfan una condici\xf3n) o que repita acciones varias veces hasta cumplir un objetivo.","sidebar":"pythonSidebar"}}}}')}}]);